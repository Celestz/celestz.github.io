{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/unit.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","name","totalResources","cropStore","totalAllocation","teutons","wood","clay","iron","crop","upkeep","reduce","acc","unit","concat","recomputeAllocation","selector","templateUrl","styleUrls","AppModule","imports","declarations","bootstrap","UnitComponent","unitPercentage","totalUnits","changes","recomputeUnitTally","Math","floor","allocation","getTotal","template","styles","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, } from '@angular/core';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = 'Teuton Calculator';\n\n  totalResources = 0\n  cropStore = 0\n\n  totalAllocation = 0\n\n  teutons = [\n    {\n      name: `Axeman`,\n      wood: 130,\n      clay: 120,\n      iron: 170,\n      crop: 70,\n      upkeep: 1,\n    },\n    {\n      name: `Teutonic Knight`,\n      wood: 450,\n      clay: 515,\n      iron: 480,\n      crop: 80,\n      upkeep: 3,\n    },\n    {\n      name: `Catapult`,\n      wood: 900,\n      clay: 1200,\n      iron: 600,\n      crop: 60,\n      upkeep: 6,\n    },\n  ]\n\n  recomputeAllocation() {\n    this.totalAllocation = this.totalResources - this.cropStore\n  }\n\n  getUnits() {\n    return this.teutons.reduce((acc, unit) => { return acc.concat(unit.name) }, [])\n  }\n}\n","<h1 class=\"text-center\">Teutons Calculator</h1>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <form>\n        <div class=\"form-group\">\n          <label for=\"totalResources\">Resource Total</label>\n          <input type=\"number\" class=\"form-control\" name=\"totalResources\" placeholder=\"Big Number Here\" [(ngModel)]=\"totalResources\" (ngModelChange)=\"recomputeAllocation()\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"cropStore\">Crop to Store</label>\n          <input type=\"number\" name=\"cropStore\" class=\"form-control\" id=\"cropStore\" placeholder=\"How many crop to save\" [(ngModel)]=\"cropStore\" (ngModelChange)=\"recomputeAllocation()\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"totalAllocation\">Total Allocation</label>\n          <input type=\"number\" name=\"totalAllocation\" class=\"form-control\" id=\"totalAllocation\" placeholder=\"How many crop to save\" [(ngModel)]=\"totalAllocation\" disabled readonly=\"$1\">\n        </div>\n      </form>\n    </div>\n    <div class=\"col-md-12\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th class=\"text-center\">Name</th>\n            <th class=\"text-center\">Wood</th>\n            <th class=\"text-center\">Clay</th>\n            <th class=\"text-center\">Iron</th>\n            <th class=\"text-center\">Crop</th>\n            <th class=\"text-center\">Total</th>\n            <th class=\"text-center\">Count</th>\n            <th colspan=\"2\">Percentage</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr unitComponent *ngFor=\"let unitObject of teutons\" [unit]=\"unitObject\" [allocation]=\"totalAllocation\"></tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { UnitComponent } from './unit.component';\n\n@NgModule({\n  imports: [BrowserModule, FormsModule],\n  declarations: [AppComponent, UnitComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Unit } from './unit'\r\n\r\n@Component({\r\n  selector: '[unitComponent]',\r\n  template: `\r\n    <th class=\"text-center\">\r\n      {{ unit.name }}\r\n    </th>\r\n    <th class=\"text-center\">\r\n      {{ getWood() }}\r\n    </th>\r\n    <th class=\"text-center\">\r\n      {{ getClay() }}\r\n    </th>\r\n    <th class=\"text-center\">\r\n      {{ getIron() }}\r\n    </th>\r\n    <th class=\"text-center\">\r\n      {{ getCrop() }}\r\n    </th>\r\n    <th class=\"text-center\">\r\n      {{ getSummary() }}\r\n    </th>\r\n    <th class=\"text-center\">\r\n      {{ totalUnits }}\r\n    </th>\r\n    <th class=\"text-center\">\r\n      <input type=\"number\" min=\"0\" max=\"100\" [(ngModel)]=\"unitPercentage\" (ngModelChange)=\"recomputeUnitTally()\"/>\r\n    </th>\r\n    <th class=\"text-center\">\r\n      <input type=\"range\" min=\"0\" max=\"100\" [(ngModel)]=\"unitPercentage\" (ngModelChange)=\"recomputeUnitTally()\"/>\r\n    </th>\r\n  `,\r\n  styles: [`h1 { font-family: Lato; }`]\r\n})\r\nexport class UnitComponent implements OnChanges  {\r\n  @Input() unit: Unit\r\n  @Input() allocation: number\r\n\r\n  unitPercentage = 0\r\n  totalUnits = 0\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.recomputeUnitTally()\r\n  }\r\n\r\n  recomputeUnitTally() {\r\n    this.totalUnits = Math.floor((this.allocation * (this.unitPercentage / 100)) / this.getTotal())\r\n  }\r\n\r\n  getWood() {\r\n    return this.totalUnits * this.unit.wood\r\n  }\r\n\r\n  getClay() {\r\n    return this.totalUnits * this.unit.clay\r\n  }\r\n\r\n  getIron() {\r\n    return this.totalUnits * this.unit.iron\r\n  }\r\n\r\n  getCrop() {\r\n    return this.totalUnits * this.unit.crop\r\n  }\r\n\r\n  getSummary() {\r\n    return this.totalUnits * this.getTotal()\r\n  }\r\n\r\n  getTotal() {\r\n    return this.unit.wood + this.unit.clay + this.unit.iron + this.unit.crop\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}